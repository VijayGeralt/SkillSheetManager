@model SkillSheetManager.Models.EmployeeDetailsModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.0/css/bootstrap.min.css" rel="stylesheet">*@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/Content/PasswordPage.css" rel="stylesheet">
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>*@
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/Javascripts/PasswordPageJavascript.js"></script>
    <script src="~/Scripts/Site/Backprevent.js"></script>
    <title>Change Password</title>
</head>

<body>
    @{
        // Checking the type of user to determine which option to show.
        HttpCookie userT = Request.Cookies["uType"];
        bool showUserOption = true;
        if (!userT.Value.Equals("Admin"))
        {
            showUserOption = true;
        }
        else
        {
            showUserOption = false;
        }
    }
    <button id="backButton" onclick="goBack(@(showUserOption.ToString().ToLower()))" class="fa fa-arrow-left rounded-circle p-2" style="margin:6vh 0vh 0vh 5vh">Back</button>
    <div class="dropdown">
        <button id="myBtn" onclick="myFunction()" class="btn btn-info dropdown-toggle" style="margin:0vh 0vh 0vh 5vh">Options</button>
        <div id="myDropdown" class="dropdown-content" style="margin-left:5vh">

            <a id="change" onclick="redirectToUserPage()" style="@(showUserOption == true ? "display:block;" : "display:none")">View/Edit Personal Details</a>
            <a id="adminOption" onclick="redirectToAdminPage()" style="@(showUserOption == false ? "display:block;" : "display:none")">Manage User</a>
            <a id="Log-out" onclick="onLogClick()">Logout</a>
        </div>
    </div>

    <div class="container col-xl-5 card pass-change-card" style="color : violet; margin-top : 15vh">
        <div class="row justify-content-center card-body">
            <div class="col-xl-12">
                <h2 class="text-center">Change Password</h2>
                <label class="text-danger col-12 text-start" id="errorAllPassword" style="margin-right:20vw; margin-top:2vh; display:none"></label>
                <form>
                    <div class="form-group">
                        <label for="currentPassword" style="margin-top:1vw">Current Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="currentPassword" oninput="validateLength(this, 60)" required>
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    <i class="fas fa-eye-slash" style="width:100px 100px" id="eye" onclick="showPassword(this,'currentPassword')"></i>
                                </span>
                            </div>
                            <label class="text-danger col-12 text-start" id="errorCurrentPassword" style="margin-right:20vw; display:none"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="newPassword" style="margin-top:1vw">New Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="newPassword" oninput="validateLength(this, 60)" required>
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    <i class="fas fa-eye-slash" style="width:100px 100px" id="eye1" onclick="showPassword(this,'newPassword')"></i>
                                </span>
                            </div>
                            <label class="text-danger col-12 text-start" id="errorNewPassword" style="margin-right:20vw; display:none"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword" style="margin-top:1vw">Confirm Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="confirmPassword" oninput="validateLength(this, 60)" required>
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    <i class="fas fa-eye-slash" style="width:100px 100px" id="eye2" onclick="showPassword(this,'confirmPassword')"></i>
                                </span>
                            </div>
                            <label class="text-danger col-12 text-start" id="errorConfirmPassword" style="margin-right:20vw; display:none"></label>
                        </div>
                    </div>
                    <div class="gap-5 d-flex justify-content-center" style="margin-top:5vh">
                        <button type="button" class="btn btn-primary" style="width:5vw" onclick="changePassword(@(showUserOption.ToString().ToLower()))">OK</button>
                        <button type="button" class="btn btn-primary" style="width: 5vw" onclick="reset()">Reset</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.0/js/bootstrap.min.js"></script>*@
    <script src="~/Scripts/bootstrap.min.js"></script>
</body>
</html>
    @*<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script>
        function changePassword() {
            var currentPassword = document.getElementById("currentPassword").value;
            var newPassword = document.getElementById("newPassword").value;
            var confirmPassword = document.getElementById("confirmPassword").value;

            if (currentPassword === "" || newPassword === "" || confirmPassword === "") {
                alert("Please fill in all the fields.");
                return;
            }

            if (newPassword !== confirmPassword) {
                alert("New Password and Confirm Password do not match.");
                return;
            }*@

            @*// Perform AJAX request or submit the form to change the password
            // Example: You can use jQuery's $.ajax() method to send the form data to the server

            // $.ajax({
            //     url: "change-password-api",
            //     type: "POST",
            //     data: {
            //         currentPassword: currentPassword,
            //         newPassword: newPassword,
            //         confirmPassword: confirmPassword
            //     },
            //     success: function(response) {
            //         // Handle success response
            //         alert("Password changed successfully!");
            //     },
            //     error: function(error) {
            //         // Handle error response
            //         alert("Failed to change password. Please try again.");
            //     }
            // });*@
        }
    @*</script>
</body>
</html>*@


@*<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>ChangePassord</title>
    </head>
    <body>
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>EmployeeDetailsModel</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WorkedInJapan, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkedInJapan, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkedInJapan, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Languages, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Languages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Database, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Database, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Database, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </body>
    </html>*@